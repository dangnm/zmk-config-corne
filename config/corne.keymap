#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    chain-length = <0>;

    // chain-length = <27>;
    // 21 backlight + 6 glowlight
};

#define TAPPING_TERM 200

/ {
    behaviors {
        /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
&none  &kp Q        &kp W           &kp E           &kp R             &kp T          &kp Y                           &kp U             &kp I       &kp O       &kp P                &none
&none  &mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_GUI D  &mt LEFT_SHIFT F  &kp G          &kp H                           &mt LEFT_SHIFT J  &mt LGUI K  &mt LALT L  &mt LCTRL SEMICOLON  &none
&none  &kp Z        &kp X           &kp C           &kp V             &kp B          &kp N                           &kp M             &kp COMMA   &kp DOT     &kp SLASH            &none
                                    &none           &lt 2 TAB         &lt 3 ENTER    &mt RS(RA(RC(RG(RALT)))) SPACE  &lt 1 ESCAPE      &none
            >;
        };

        symbols_layer {
            label = "SYMBOLS";
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp LBRC              &kp RIGHT_BRACE        &kp PIPE     &kp EQUAL      &kp PLUS              &kp MINUS     &kp UNDERSCORE     &kp ASTERISK   &trans
&none  &kp EXCL         &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE    &kp LEFT       &kp DOWN_ARROW        &kp UP_ARROW  &kp RIGHT_ARROW    &kp BACKSPACE  &trans
&none  &kp PERCENT      &kp CARET    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE    &kp AMPERSAND  &kp NON_US_BACKSLASH  &kp SQT       &kp DOUBLE_QUOTES  &none          &trans
                                     &trans                &trans                 &trans       &trans         &trans                &trans
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
&kp LG(LC(TAB))  &trans  &kp LG(LEFT_BRACKET)  &kp LS(TAB)        &kp TAB          &kp LG(RIGHT_BRACKET)    &kp LA(LEFT)       &kp LA(DOWN)  &kp LA(UP)  &kp LA(RIGHT)  &trans  &trans
&kp ESC          &trans  &trans                &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &trans                   &kp LEFT           &kp DOWN      &kp UP      &kp RIGHT      &trans  &trans
&trans           &trans  &kp HOME              &kp PG_DN          &kp PG_UP        &kp END                  &kp LG(LEFT)       &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)  &trans  &trans
                                               &trans             &trans           &trans                   &kp LC(LG(SPACE))  &trans        &trans
            >;
        };

        extended_layer {
            label = "EXT";
            bindings = <
&trans    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6                &kp F7                &kp F8  &kp F9  &kp F10  &kp F12
&kp K_PP  &kp K_PREV    &kp K_NEXT    &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans   &trans
&trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans                &trans                &trans  &trans  &trans   &trans
                                      &trans        &trans        &trans          &trans                &trans                &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
